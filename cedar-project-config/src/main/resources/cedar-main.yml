home: "${CEDAR_HOME}"
host: "${CEDAR_HOST}"

adminUser:
  userName: "cedar-admin"
  #Plain text password of "cedar-admin" user
  password: "${CEDAR_ADMIN_USER_PASSWORD}"
  #apiKey
  apiKey: "${CEDAR_ADMIN_USER_API_KEY}"

#Keycloak server related settings.
keycloak:
  #For admin tasks
  clientId: "admin-cli"
  #Configuring Keycloak instead of having a keycloak.json
  realm: "CEDAR"
  authServerUrl: "https://auth.${CEDAR_HOST}/auth"
  sslRequired: "ALL"
  resource: "cedar-angular-app"
  publicClient: true

#MongoDB settings
artifactServer:
  mongoConnection:
    host: "${CEDAR_MONGO_HOST}"
    port: "${CEDAR_MONGO_PORT}"
    user: "${CEDAR_MONGO_APP_USER_NAME}"
    password: "${CEDAR_MONGO_APP_USER_PASSWORD}"
    databaseName: "cedar"
  collections:
    field: "template-fields"
    element: "template-elements"
    template: "templates"
    instance: "template-instances"

userServer:
  mongoConnection:
    host: "${CEDAR_MONGO_HOST}"
    port: "${CEDAR_MONGO_PORT}"
    user: "${CEDAR_MONGO_APP_USER_NAME}"
    password: "${CEDAR_MONGO_APP_USER_PASSWORD}"
    databaseName: "cedar"
  collections:
    user: "users"

messagingServer:
  url: "jdbc:mysql://${CEDAR_MESSAGING_MYSQL_HOST}:${CEDAR_MESSAGING_MYSQL_PORT}/${CEDAR_MESSAGING_MYSQL_DB}"
  user: "${CEDAR_MESSAGING_MYSQL_USER}"
  password: "${CEDAR_MESSAGING_MYSQL_PASSWORD}"
  driverClass: "com.mysql.jdbc.Driver"
  properties:
    createDatabaseIfNotExist: "true"
    serverTimezone: "America/Los_Angeles"
    useSSL: "false"

dbLogging:
  url: "jdbc:mysql://${CEDAR_LOG_MYSQL_HOST}:${CEDAR_LOG_MYSQL_PORT}/${CEDAR_LOG_MYSQL_DB}"
  user: "${CEDAR_LOG_MYSQL_USER}"
  password: "${CEDAR_LOG_MYSQL_PASSWORD}"
  driverClass: "com.mysql.jdbc.Driver"
  properties:
    createDatabaseIfNotExist: "true"
    serverTimezone: "America/Los_Angeles"
    useSSL: "false"

#Neo4J settings
neo4j:
  bolt:
    uri: "bolt://${CEDAR_NEO4J_HOST}:${CEDAR_NEO4J_BOLT_PORT}"
    userName: "${CEDAR_NEO4J_USER_NAME}"
    userPassword: "${CEDAR_NEO4J_USER_PASSWORD}"

searchSettings:
  searchRetrieveSettings:
    maxAttempts: 3
    delayAttempts: 10000

elasticsearch:
  clusterName: "elasticsearch_cedar"
  indexes:
    searchIndex:
      name: "cedar-search"
    rulesIndex:
      name: "cedar-rules"
  host: "${CEDAR_ELASTICSEARCH_HOST}"
  transportPort: "${CEDAR_ELASTICSEARCH_TRANSPORT_PORT}"
  size: 1000
  scrollKeepAlive: 60000

#Linked data settings
#For ID generation
linkedData:
  base: "https://repo.${CEDAR_HOST}/"
  usersBase: "https://metadatacenter.org/users/"

#Graph DB server global structure
folderStructure:
  rootFolder:
    path: "/"
    description: "CEDAR Root Folder"
  usersFolder:
    path: "/Users"
    description: "CEDAR Users"
  everybodyGroup:
    name: "Everybody"
    description: "Group holding all the users"
  rootCategory:
    name: "ROOT-CATEGORY"
    description: "CEDAR Root Category"
    identifier: "CEDAR Root Category Identifier"

#Server bases
#for inter-service REST calls
servers:
  group:
    httpPort: "${CEDAR_GROUP_HTTP_PORT}"
    adminPort: "${CEDAR_GROUP_ADMIN_PORT}"
    stopPort: "${CEDAR_GROUP_STOP_PORT}"
  messaging:
    httpPort: "${CEDAR_MESSAGING_HTTP_PORT}"
    adminPort: "${CEDAR_MESSAGING_ADMIN_PORT}"
    stopPort: "${CEDAR_MESSAGING_STOP_PORT}"
    base: "http://${CEDAR_NET_GATEWAY}:${CEDAR_MESSAGING_HTTP_PORT}/"
  repo:
    httpPort: "${CEDAR_REPO_HTTP_PORT}"
    adminPort: "${CEDAR_REPO_ADMIN_PORT}"
    stopPort: "${CEDAR_REPO_STOP_PORT}"
  resource:
    httpPort: "${CEDAR_RESOURCE_HTTP_PORT}"
    adminPort: "${CEDAR_RESOURCE_ADMIN_PORT}"
    stopPort: "${CEDAR_RESOURCE_STOP_PORT}"
    apiDoc: true
    base: "http://${CEDAR_NET_GATEWAY}:${CEDAR_RESOURCE_HTTP_PORT}/"
    regenerateSearchIndex: "http://${CEDAR_NET_GATEWAY}:${CEDAR_RESOURCE_HTTP_PORT}/command/regenerate-search-index"
    generateEmptySearchIndex: "http://${CEDAR_NET_GATEWAY}:${CEDAR_RESOURCE_HTTP_PORT}/command/generate-empty-search-index"
    regenerateRulesIndex: "http://${CEDAR_NET_GATEWAY}:${CEDAR_RESOURCE_HTTP_PORT}/command/regenerate-rules-index"
    generateEmptyRulesIndex: "http://${CEDAR_NET_GATEWAY}:${CEDAR_RESOURCE_HTTP_PORT}/command/generate-empty-rules-index"
  schema:
    httpPort: "${CEDAR_SCHEMA_HTTP_PORT}"
    adminPort: "${CEDAR_SCHEMA_ADMIN_PORT}"
    stopPort: "${CEDAR_SCHEMA_STOP_PORT}"
  submission:
    httpPort: "${CEDAR_SUBMISSION_HTTP_PORT}"
    adminPort: "${CEDAR_SUBMISSION_ADMIN_PORT}"
    stopPort: "${CEDAR_SUBMISSION_STOP_PORT}"
  artifact:
    httpPort: "${CEDAR_ARTIFACT_HTTP_PORT}"
    adminPort: "${CEDAR_ARTIFACT_ADMIN_PORT}"
    stopPort: "${CEDAR_ARTIFACT_STOP_PORT}"
    base: "http://${CEDAR_NET_GATEWAY}:${CEDAR_ARTIFACT_HTTP_PORT}/"
  terminology:
    httpPort: "${CEDAR_TERMINOLOGY_HTTP_PORT}"
    adminPort: "${CEDAR_TERMINOLOGY_ADMIN_PORT}"
    stopPort: "${CEDAR_TERMINOLOGY_STOP_PORT}"
    apiDoc: true
  user:
    httpPort: "${CEDAR_USER_HTTP_PORT}"
    adminPort: "${CEDAR_USER_ADMIN_PORT}"
    stopPort: "${CEDAR_USER_STOP_PORT}"
    usersBase: "http://${CEDAR_NET_GATEWAY}:${CEDAR_USER_HTTP_PORT}/users/"
  valuerecommender:
    httpPort: "${CEDAR_VALUERECOMMENDER_HTTP_PORT}"
    adminPort: "${CEDAR_VALUERECOMMENDER_ADMIN_PORT}"
    stopPort: "${CEDAR_VALUERECOMMENDER_STOP_PORT}"
    base: "http://${CEDAR_NET_GATEWAY}:${CEDAR_VALUERECOMMENDER_HTTP_PORT}/"
    apiDoc: true
  worker:
    httpPort: "${CEDAR_WORKER_HTTP_PORT}"
    adminPort: "${CEDAR_WORKER_ADMIN_PORT}"
    stopPort: "${CEDAR_WORKER_STOP_PORT}"
  open:
    httpPort: "${CEDAR_OPEN_HTTP_PORT}"
    adminPort: "${CEDAR_OPEN_ADMIN_PORT}"
    stopPort: "${CEDAR_OPEN_STOP_PORT}"
  internals:
    httpPort: "${CEDAR_INTERNALS_HTTP_PORT}"
    adminPort: "${CEDAR_INTERNALS_ADMIN_PORT}"
    stopPort: "${CEDAR_INTERNALS_STOP_PORT}"


#Default values for user profile
#Used when generating user from blueprint
blueprintUserProfile:
  screenNameTemplate: "{firstName} {lastName}"
  homeFolderDescriptionTemplate: "Home folder of {firstName} {lastName}"
  defaultAPIKey:
    serviceName: "CEDAR"
    description: "Auto-generated apiKey for CEDAR"
    salt: "${CEDAR_SALT_API_KEY}"
  defaultRoles:
    normal:
      - "defaultUser"
      - "templateCreator"
      - "metadataCreator"
      - "groupAdministrator"
      - "categoryAdministrator"
    builtInAdmin:
      - "defaultUser"
      - "templateCreator"
      - "metadataCreator"
      - "userAdministrator"
      - "groupAdministrator"
      - "filesystemAdministrator"
      - "categoryAdministrator"
      - "categoryPrivilegedAdministrator"
      - "searchReindexer"
      - "processMessageSender"
  uiPreferences:
    folderView:
      sortBy: "name"
      sortDirection: "asc"
      viewMode: "grid"
    stylesheet: "default"

#Terminology server configuration
terminology:
  bioPortal:
    apiKey: "${CEDAR_BIOPORTAL_API_KEY}"
    basePath: "${CEDAR_BIOPORTAL_REST_BASE}"
    connectTimeout: 3000
    socketTimeout: 30000
    defaultPageSize: 50

worker:
  valuerecommender:
    maxReindexingThreadCount: 10
    sleepMillisAfterTooManyProcessing: 1000
    sleepMillisAfterCurrentIdProcessing: 1000

importExport:
  exportDir: "${CEDAR_HOME}/export/"
  importDir: "${CEDAR_HOME}/import/"

resourceRESTAPI:
  pagination:
    defaultPageSize: 100
    maxPageSize: 500

artifactRESTAPI:
  pagination:
    defaultPageSize: 20
    maxPageSize: 500
  excludedFields:
    - "_id"
  summaries:
    field:
      fields:
        - "@id"
        - "_ui.title"
        - "_ui.description"
    element:
      fields:
        - "@id"
        - "_ui.title"
        - "_ui.description"
    template:
      fields:
        - "@id"
        - "_ui.title"
        - "_ui.description"
    instance:
      fields:
        - "@id"
        - "_ui.title"
        - "_ui.description"

categoryRESTAPI:
  pagination:
    defaultPageSize: 20
    maxPageSize: 500

cache:
  persistent:
    connection:
      host: "${CEDAR_REDIS_PERSISTENT_HOST}"
      port: "${CEDAR_REDIS_PERSISTENT_PORT}"
      timeout: 2000
    queueNames:
      searchPermission: "CEDAR-QUEUE-search-permission"
      ncbiSubmission: "CEDAR-QUEUE-ncbi-submission"
      appLog: "CEDAR-QUEUE-app-log"
      valuerecommender: "CEDAR-QUEUE-valuerecommender"
  nonPersistent:
    connection:
      host: "${CEDAR_REDIS_NONPERSISTENT_HOST}"
      port: "${CEDAR_REDIS_NONPERSISTENT_PORT}"
      timeout: 2000
  terminology:
    folder: "${CEDAR_HOME}/cache/terminology"

validation:
  enabled: "${CEDAR_VALIDATION_ENABLED}"

sundial:
  thread-pool-size: 10
  shutdown-on-unload: true
  wait-on-shutdown: false
  start-delay-seconds: 0
  start-scheduler-on-load: true
  global-lock-on-load: false
  annotated-jobs-package-name: org.metadatacenter.worker
  tasks: [startjob, stopjob]

submission:
  ncbi:
    sra:
      ftp:
        host: "${CEDAR_NCBI_SRA_FTP_HOST}"
        user: "${CEDAR_NCBI_SRA_FTP_USER}"
        password: "${CEDAR_NCBI_SRA_FTP_PASSWORD}"
        submissionDirectory: "${CEDAR_NCBI_SRA_FTP_DIRECTORY}"
  immPort:
    authentication:
      user: "${CEDAR_IMMPORT_SUBMISSION_USER}"
      password: "${CEDAR_IMMPORT_SUBMISSION_PASSWORD}"
    tokenEndpoint:
      url: https://auth.dev.immport.org/auth/token
    workspaceEndpoint:
      url: https://api.dev.immport.org/users
    submissionEndpoint:
      url: https://api.dev.immport.org/data/upload
    statusEndpoint:
      url: https://api.dev.immport.org/data/upload/registration
  submittableTemplateIds:
    - "${CEDAR_SUBMISSION_TEMPLATE_ID_1}"
    - "${CEDAR_SUBMISSION_TEMPLATE_ID_2}"

nciCadsrTools:
  ftp:
    host: "${CEDAR_NCI_CADSR_FTP_HOST}"
    user: "${CEDAR_NCI_CADSR_FTP_USER}"
    password: "${CEDAR_NCI_CADSR_FTP_PASSWORD}"
    cdesDirectory: "${CEDAR_NCI_CADSR_FTP_CDES_DIRECTORY}"
    classificationsDirectory: "${CEDAR_NCI_CADSR_FTP_CLASSIFICATIONS_DIRECTORY}"

testUsers:
  testUser1:
    id: "${CEDAR_TEST_USER1_ID}"
  testUser2:
    id: "${CEDAR_TEST_USER2_ID}"
